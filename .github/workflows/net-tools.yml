name: publish net-tools

on:
  push:
    paths:
#      - 'net-tools/*'  # only debug
#      - '.github/workflows/net-tools.yml'
      - net-tools/version.txt


jobs:
  build_image:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        image_folder: ['net-tools']
        arch: ['amd64', 'arm64']

    env:  # set global vas
      DOCKER_REPO: denisitpro/net-tools
      DOCKER_FILE: Dockerfile
      UBUNTU_IMAGE_VERSION: "24.04"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Extract version
        id: vars
        run: |
          cd ${{ matrix.image_folder }}
          echo "VERSION=$(cat version.txt)"
          echo "VERSION=$(cat version.txt)" >> $GITHUB_ENV
          echo "TIMESTAMP=$(date -u +%Y%m%d%H%M%S)" >> $GITHUB_ENV

      - name: Load app versions
        run: |
          cd ${{ matrix.image_folder }}
          while IFS='=' read -r key value; do
            echo "$key=$value" >> $GITHUB_ENV
          done < app-version.txt

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        id: create_builder
        uses: docker/setup-buildx-action@v3

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: ./${{ matrix.image_folder }}
          file: ./${{ matrix.image_folder }}/${{ env.DOCKER_FILE }}
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            ${{ env.DOCKER_REPO }}:${{ env.VERSION }}
            ${{ env.DOCKER_REPO }}:latest
          build-args: |
            TIMESTAMP=${{ env.TIMESTAMP }}
            VERSION=${{ env.VERSION }}
            UBUNTU_IMAGE_VERSION=${{ env.UBUNTU_IMAGE_VERSION }}
            VAULT_VERSION=${{ env.VAULT_VERSION }}
            CONSUL_VERSION=${{ env.CONSUL_VERSION }}
            HELM_VERSION=${{ env.HELM_VERSION }}
            HELM_DISTRO=${{ env.HELM_DISTRO }}
            KUBECTL_VERSION=${{ env.KUBECTL_VERSION }}
            YQ_VERSION=${{ env.YQ_VERSION }}
            TARGETARCH=${{ matrix.arch }}
          builder: ${{ steps.create_builder.outputs.name }}